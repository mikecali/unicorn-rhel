---
# Provision instances in AWS specific to the Linux-Apache HA Proxy demo
- name: Provision instances in AWS
  hosts: localhost
  become: false
  connection: local
  gather_facts: False
  
  vars:
    instance_ids:
      - "{{ wserver1 }}"
      - "{{ wserver2 }}"
     

  tasks:
  
  - set_fact: ec2_region=us-east-2
  - set_fact: iam_role=ec2
  - set_fact: ec2_image=ami-03291866
  - set_fact: ec2_keypair=ec2-ocp
  - set_fact: subnet_to_use=subnet-e419d49e
  - set_fact: ec2_security_group=sg-bf0f3dd5
  - set_fact: ec2_instance_type=t2.micro
  - set_fact: ec2_instance_count=2
  
  - name: Launch webserver instances
    ec2:
#      access_key: "{{ ec2_access_key }}"
#      secret_key: "{{ ec2_secret_key }}"
      instance_ids: "{{ instance_ids }}"
      keypair: "{{ ec2_keypair }}"
      group_id: "{{ ec2_security_group }}"
      instance_type: "{{ ec2_instance_type }}"
      image: "{{ ec2_image }}"
      volumes:
         - device_name: /dev/sda1
           volume_size: 10
           delete_on_termination: true
      instance_tags:
        Name: "{{ items }}"
        Creator: Ansible
        Purpose: "Instance created by Ansible from {{ ami_to_use }}"
      region: "{{ ec2_region }}"
      instance_tags: "{'ansible_group':'webservers', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'demo_''{{ tower_user_name }}'}"
      count: "{{ ec2_instance_count }}"
      wait: true
    register: ec2

  - name: Launch load balancing instance
    ec2:
#      access_key: "{{ ec2_access_key }}"
#      secret_key: "{{ ec2_secret_key }}"
      keypair: "{{ ec2_keypair }}"
      group_id: "{{ ec2_security_group }}"
      instance_type: "{{ ec2_instance_type }}"
      image: "{{ ec2_image }}"
      volumes:
         - device_name: /dev/sda1
           volume_size: 10
           delete_on_termination: true
      instance_tags:
        Name: "{{ instance_name_lb }}"
        Creator: Ansible
        Purpose: "Instance created by Ansible from {{ ami_to_use }}"
      region: "{{ ec2_region }}"
      instance_tags: "{'ansible_group':'lbservers', 'type':'{{ ec2_instance_type }}', 'group':'{{ ec2_security_group }}', 'Name':'demo_''{{ tower_user_name }}'}"
      count: "1"
      wait: true
    register: ec2

  - name: Wait for 22 to start listening 
    wait_for:
      port: 22
      host: "{{ instance_facts.instances[0].network_interfaces[0].association.public_ip }}"
    msg: "Timeout waiting for 22 to respond"
